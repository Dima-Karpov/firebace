{"version":3,"sources":["components/LoginForm/LoginForm.module.css","components/Profile/Profile.module.css","constans/index.ts","fire.ts","components/LoginForm/LoginForm.tsx","components/Profile/Profile.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","EmptiString","appFire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","LoginForm","memo","props","email","setEmail","password","setPassword","handleLogin","hasAccount","setHasAccount","emailError","passwordError","handleSingUp","onSetEmailInput","useCallback","e","currentTarget","value","onSetPassowrdInput","onSetHasAccountSpan","className","s","loginBlock","loginContainer","type","onChange","required","errorMsg","btnContainer","onClick","Profile","handleLogout","profile","App","useState","user","setUser","setEmailError","setPasswordError","clearError","authListener","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","error","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd11a2e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"LoginForm_loginBlock__2uoe4\",\"loginContainer\":\"LoginForm_loginContainer__2ATfQ\",\"btnContainer\":\"LoginForm_btnContainer__2uD_K\",\"errorMsg\":\"LoginForm_errorMsg__3gJEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1C-iJ\"};","export const EmptiString: string = '';","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: 'AIzaSyDHMzMswQ3EcOgcF6XtPc7RXCLkatbSax8',\r\n  authDomain: 'login-e00cc.firebaseapp.com',\r\n  projectId: 'login-e00cc',\r\n  storageBucket: 'login-e00cc.appspot.com',\r\n  messagingSenderId: '94213446447',\r\n  appId: '1:94213446447:web:09307121acbb8ceedadfda',\r\n  measurementId: 'G-21HW9JKQST',\r\n};\r\n\r\nconst appFire: any = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth(appFire);\r\nexport default appFire\r\n\r\n","import {ChangeEvent, FC, memo, useCallback} from 'react';\r\nimport s from './LoginForm.module.css';\r\nimport {LoginPropsType} from './types/LoginPropsType';\r\n\r\nexport const LoginForm: FC<LoginPropsType> = memo((props) => {\r\n  const {\r\n    email,\r\n    setEmail,\r\n    password,\r\n    setPassword,\r\n    handleLogin,\r\n    hasAccount,\r\n    setHasAccount,\r\n    emailError,\r\n    passwordError,\r\n    handleSingUp,\r\n  } = props;\r\n\r\n  const onSetEmailInput = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value)\r\n  }, [setEmail]);\r\n  const onSetPassowrdInput = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n  }, [setPassword]);\r\n  const onSetHasAccountSpan = () => {\r\n    setHasAccount(!hasAccount)\r\n  }\r\n\r\n  return (\r\n    <div className={s.loginBlock}>\r\n      <div className={s.loginContainer}>\r\n        <span>Email</span>\r\n        <input\r\n          type='text'\r\n          value={email}\r\n          onChange={onSetEmailInput}\r\n          required\r\n        />\r\n        <p className={s.errorMsg}>{emailError}</p>\r\n        <span>Password</span>\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={onSetPassowrdInput}\r\n          required\r\n        />\r\n        <p className={s.errorMsg}>{passwordError}</p>\r\n        <div className={s.btnContainer}>\r\n          {\r\n            hasAccount ? (\r\n              <>\r\n                <button onClick={handleLogin}>Sing in</button>\r\n                <p>Dont't have an account ?\r\n                  <span onClick={onSetHasAccountSpan}>Sing up</span>\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button onClick={handleSingUp}>Sing up</button>\r\n                <p>Have an account ?\r\n                  <span onClick={onSetHasAccountSpan}>Sing in</span>\r\n                </p>\r\n              </>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n});","import {FC, memo} from 'react';\r\nimport s from './Profile.module.css';\r\nimport {ProfilePropsType} from './types/ProfilePropsType';\r\n\r\nexport const Profile: FC<ProfilePropsType> = memo(({handleLogout}) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <nav>\r\n        <h2>Welcom</h2>\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </nav>\r\n    </div>\r\n  )\r\n})","import {FC, useEffect, useState} from 'react';\nimport './App.module.css';\n\nimport {EmptiString} from './constans/index';\nimport appFire from './fire';\n\nimport {LoginForm} from './components/LoginForm/LoginForm';\nimport {Profile} from './components/Profile/Profile';\n\n\n\nexport const App: FC = () => {\n  const [user, setUser] = useState<string>(EmptiString);\n  const [email, setEmail] = useState<string>(EmptiString);\n  const [password, setPassword] = useState<string>(EmptiString);\n  const [emailError, setEmailError] = useState<string>(EmptiString);\n  const [passwordError, setPasswordError] = useState<string>(EmptiString);\n  const [hasAccount, setHasAccount] = useState<boolean>(false);\n\n  const clearInputs = () => {\n    setEmail(EmptiString);\n    setPassword(EmptiString);\n  };\n  const clearError = () => {\n    setEmailError(EmptiString);\n    setPasswordError(EmptiString);\n  };\n  const handleLogin = () => {\n    clearError();\n    appFire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((error: any) => {\n        switch (error.code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n            setEmailError(error.message);\n            break;\n          case 'auth/wrong-password':\n            setPasswordError(error.message);\n            break;\n        }\n      });\n  };\n  const handleSignUp = () => {\n    clearError();\n    appFire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error: any) => {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n            setEmailError(error.message);\n            break;\n          case 'auth/weak-password':\n            setPasswordError(error.message);\n            break;\n        }\n      });\n  };\n  const handleLogout = () => {\n    appFire.auth().signOut();\n  };\n  const authListener = () => {\n    appFire.auth().onAuthStateChanged((user: string) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(EmptiString)\n      }\n    })\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className='App'>\n      {!user ? (\n        <LoginForm\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n          handleSingUp={handleSignUp}\n        />\n      ) : (\n        <Profile handleLogout={handleLogout} />\n      )}\n    </div>\n  );\n};\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}